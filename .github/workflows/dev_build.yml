name: Dev Build

on:
  push:
    branches: [ dev ]
  workflow_dispatch:

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.2
      - name: Get Plugin Version
        id: plugin-version
        # You may pin to the exact commit or the version.
        # uses: dante-signal31/rust-app-version@752c1afc51739ac75b36157cdd20e7116d203980
        uses: dante-signal31/rust-app-version@v1.0.0
    outputs:
      version: ${{ steps.plugin-version.outputs.app_version }}
  package-dev:
    needs: get-version
    if: ${{ contains(needs.get-version.outputs.version, 'dev') }}
    runs-on: ubuntu-latest
    container:
      image: jugeeya/cargo-skyline:3.0.0-dkp-beta
    steps:
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - uses: actions/checkout@v2.4.2
      - name: Download ROMFS
        # You may pin to the exact commit or the version.
        # uses: i3h/download-release-asset@6a9870c8f1c561f9e67550d6177c31c2b1c49fef
        uses: i3h/download-release-asset@v1.3.2
        with:
          # 
          owner: WuBoytH
          # 
          repo: WuBor-Romfs
          # 
          tag: dev
          # 
          file: romfs.zip
      - name: Build Release NRO
        run: |
          PATH=$PATH:/root/.cargo/bin:/opt/devkitpro/devkitA64/bin /root/.cargo/bin/cargo-skyline skyline build --release
        env:
          HOME: /root
      - name: Create Release ZIP
        shell: bash
        run: |
          cd scripts && python3 create_dev.py && cd ..
      - name: Upload Plugin Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: build
          path: The_WuBor_Patch_Dev.zip
  upload:
    runs-on: ubuntu-latest
    needs: [ package-dev, get-version ]
    steps:
      # - name: Delete Version Dev Build
      #   uses: dev-drprasad/delete-tag-and-release@v0.2.0
      #   with:
      #     delete_release: true
      #     tag_name: ${{needs.get-version.outputs.version}}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Download all artifacts
        uses: actions/download-artifact@v3.0.0
      - name: Create Prerelease
        uses: softprops/action-gh-release@v0.1.14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{needs.get-version.outputs.version}}
          release_name: ${{needs.get-version.outputs.version}}
          draft: false
          prerelease: true
          body: >
            Nightly built off of the latest code in the dev branch.

            [You can view the changelogs for a specific version here.](https://drive.google.com/drive/folders/1yjnSZ5ZIBclAStsjJV1ODlBnJ3FYUaoD?usp=sharing)
            These will be updated to match the most recent dev build (this one!).
            
            ## Installation
            
            Remove the `ultimate/mods/The WuBor Patch` folder, if you have one already.

            Extract `The_WuBor_Patch_Dev.zip` to the root of the SD card. The plugin should be included in `ultimate/mods/The WuBor Patch/`
          files: >
            build/*
